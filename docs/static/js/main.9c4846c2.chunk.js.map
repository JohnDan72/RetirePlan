{"version":3,"sources":["components/calculator/forms/FormCalculatorSecondary.module.css","components/calculator/PrincipalCalculator.module.css","components/calculator/SecondaryCalculator.module.css","components/tables/ResultPanel.module.css","types/types.js","auth/authReducer.js","GeneralContext.js","media/retplan-logo.png","models/calculator/formModel.js","hooks/useForm.js","selectors/startUser.js","helpers/calculatorValidator.js","components/textfieldsForm/TexField.js","components/calculator/input-types/InputSalary.js","components/calculator/input-types/InputRate.js","components/calculator/input-types/InputRateSlider.js","components/calculator/input-types/InputMonthPay.js","helpers/calculator-functions.js","components/calculator/input-types/InputAge.js","components/calculator/forms/FormCalculatorPrincipal.js","components/calculator/PrincipalCalculator.js","components/ui/MyLineChart.js","components/ui/ModalChart.js","components/calculator/forms/FormCalculatorSecondary.js","components/ui/Message.js","components/tables/ResultPanel.js","components/calculator/SecondaryCalculator.js","RetirementPlanApp.js","routes/DashboardRouter.js","components/start/StartScreen.js","hooks/useStart.js","components/404/NotFound.js","routes/PrivateRoute.js","routes/PublicRoute.js","routes/AppRouter.js","MainApp.js","index.js","components/calculator/forms/FormCalculatorPrincipal.module.css","components/start/StartScreen.module.css"],"names":["module","exports","types","authReducer","state","arguments","length","undefined","action","type","MAX_AGE","user","_objectSpread","payload","logged","planData","GeneralContext","createContext","StringType","Schema","Types","model","Model","salary","isRequired","minLength","concat","addRule","value","data","transformed","replace","test","rate","age","useForm","initialState","_useState","useState","loading","error","status","error_msg","_useState2","_slicedToArray","formValue","setFormValue","handleInputChange","_ref","name","_defineProperty","resetForm","setFormError","setLoading","startUser","milliseconds","Promise","res","rej","setTimeout","formatMoney","Intl","NumberFormat","style","currency","format","formatMoneyAux","result","splited","split","integerPart","Number","toLocaleString","decimalPart","validRepetition","item","pop","includes","push","TextField","label","accepter","helpBlock","prefix","posfix","rest","_objectWithoutProperties","_excluded","_jsx","Form","Group","children","_jsxs","_Fragment","ControlLabel","InputGroup","Addon","Control","HelpText","TagTextField","_ref2","_excluded2","TagInput","className","InputSalary","placeholder","id","onChange","match","validMoney","defaultProps","InputRate","validInt","InputRateSlider","Slider","max","step","progress","InputMonthPay","month_pay","trigger","onCreate","maxItems","validation","validTagInput","onClean","event","calculeRetPlan","_ref$salary","_ref$rate","_ref$month_pay","_ref$age","salaryGoal","rateNumber","ageNumber","map","ind","currentYear","Date","getFullYear","iteration","currentSalaryAdvance","annualSaving","annualSavingString","success","advice","breakDown","key","year","return","investment_and_returns","final_salary","current_age","auxPrevInvestment","newReturn","newAccumulation","sort","a","b","InputAge","useContext","reducerData","validAge","FormCalculatorPrincipal","navigate","useNavigate","_useForm","_formValue$error","status_error","_useContext","dispatch","styles","fondo","FlexboxGrid","justify","Item","as","Col","xs","md","formStyle","xsOffset","mdOffset","lg","lgOffset","Button","color","appearance","endIcon","BiExit","onClick","then","response","console","log","src","logo","imgStyle","alt","textCenter","onSubmit","formStatus","userData","fluid","vAEnd","centerContet","Loader","size","ButtonToolbar","block","centerButton","BiSend","marginLeft","Message","showIcon","PrincipalCalculator","MyLineChart","clean","text","LineChart","sortedData","dataLength","dataLines","j","element","getChartData","Line","area","ModalChart","openModal","setOpenModal","BiBarChartAlt","Modal","open","onClose","Header","Title","Body","Divider","FormCalculatorSecondary","align","FlexboxGridItem","BiCalculator","header","message","Notification","Column","Table","HeaderCell","Cell","ResultPanel","_React$useState","React","_React$useState2","sortColumn","setSortColumn","_React$useState3","_React$useState4","sortType","setSortType","_React$useState5","_React$useState6","handleSortColumn","index","Panel","panelStyle","bordered","height","x","y","charCodeAt","onSortColumn","rowKey","width","sortable","resizable","dataKey","rowData","flexGrow","SecondaryCalculator","RetirementPlanApp","Container","Content","Outlet","DashboardRouter","theme","CustomProvider","Routes","Route","path","StartScreen","_useStart","startValue","setStartValue","useStart","allHeighWidth","carousel1","loadingStyle","lastPath","localStorage","getItem","customButton","NotFound","Link","to","PrivateRoute","location","useLocation","pathname","search","setItem","Navigate","PublicRoute","AppRouter","Router","exact","init","JSON","parse","MainApp","_useReducer","useReducer","_useReducer2","active","setActive","_useState3","_useState4","setTheme","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c4846c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formStyle\":\"FormCalculatorSecondary_formStyle__33VJg\",\"imgStyle\":\"FormCalculatorSecondary_imgStyle__AYPQu\",\"textCenter\":\"FormCalculatorSecondary_textCenter__3IdyO\",\"centerButton\":\"FormCalculatorSecondary_centerButton__2XVBa\",\"forgotDiv\":\"FormCalculatorSecondary_forgotDiv__1iJYR\",\"googleDiv\":\"FormCalculatorSecondary_googleDiv__3asLf\",\"newAccount\":\"FormCalculatorSecondary_newAccount__2qP-P\",\"vAEnd\":\"FormCalculatorSecondary_vAEnd__3-8gu\",\"centerContet\":\"FormCalculatorSecondary_centerContet__3cvCK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fondo\":\"PrincipalCalculator_fondo__2AJRk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fondo\":\"SecondaryCalculator_fondo__2RZcC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panelStyle\":\"ResultPanel_panelStyle__1LUaO\"};","\r\n\r\nexport const types = {\r\n    start: '[auth] Start',\r\n    end: '[auth] End',\r\n}","import { types } from '../types/types';\r\n\r\n// state = {\r\n//     logged: true\r\n// }\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.start:\r\n            return {\r\n                MAX_AGE: 120,\r\n                user: {\r\n                    ...action.payload.user,\r\n                    logged: true\r\n                },\r\n                planData: action.payload.planData,\r\n            }\r\n        case types.end:\r\n            return {\r\n                user: {\r\n                    logged: false\r\n                },\r\n                planData: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createContext } from \"react\";\r\n\r\nexport const GeneralContext = createContext(null);","export default __webpack_public_path__ + \"static/media/retplan-logo.cb869e57.png\";","import { Schema } from \"rsuite\";\r\nconst { StringType } = Schema.Types;\r\n\r\n\r\nconst minSalary = 1;\r\n// const maxSalary = 20;\r\nconst minRate = 1;\r\nconst minAge = 1;\r\n\r\nconst model = Schema.Model({\r\n    salary: StringType()\r\n        .isRequired('Campo requerido')\r\n        .minLength(minSalary, `Debe tener mínimo ${minSalary} cifras`)\r\n        .addRule((value, data) => {\r\n            const transformed = value.replace(/\\$|,/g, \"\")\r\n            return !(/^[1-9]\\d*\\.{1,2}$/.test(transformed));\r\n        }, 'Ingresa una cantidad válida (example: 4500, 4500.51)')\r\n    ,\r\n    rate: StringType()\r\n        .isRequired('Campo requerido')\r\n        .minLength(minRate, `Debe tener mínimo ${minRate} cifras`)\r\n        .addRule((value, data) => {\r\n            return !(/^[1-9]\\d{0,1}\\.{1,2}$/.test(value));\r\n        }, 'Ingresa una tasa válida (example: 10, 10.51)')\r\n    ,\r\n    age: StringType()\r\n        .isRequired('Campo requerido')\r\n        .minLength(minAge, `Debe tener mínimo ${minAge} cifras`)\r\n        .addRule((value, data) => {\r\n            return !(/(^\\D)|(^0)/.test(value));\r\n        }, 'Ingrese una edad válida')\r\n});\r\n\r\nexport default model;","import { useState } from 'react';\r\n\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [formValue, setFormValue] = useState({\r\n        ...initialState,\r\n        loading: false,\r\n        error: {\r\n            status: false,\r\n            error_msg: ''\r\n        }\r\n    });\r\n\r\n    const handleInputChange = ({ name, value }) => {\r\n        setFormValue({\r\n            ...formValue,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setFormValue({\r\n            ...initialState,\r\n            loading: false,\r\n            error: {\r\n                status: false,\r\n                error_msg: ''\r\n            }\r\n        });\r\n    }\r\n\r\n    const setFormError = (status, error_msg = '') => {\r\n        setFormValue({\r\n            ...formValue,\r\n            error: {\r\n                status,\r\n                error_msg\r\n            }\r\n        });\r\n    }\r\n\r\n    const setLoading = (loading) => {\r\n        setFormValue({\r\n            ...formValue,\r\n            loading\r\n        })\r\n    }\r\n\r\n    return {\r\n        formValue,\r\n        setFormValue,\r\n        handleInputChange,\r\n        resetForm,\r\n        setFormError,\r\n        setLoading\r\n    };\r\n}\r\n\r\n\r\n","export const startUser = (milliseconds = 1500) => {\r\n    return new Promise((res,rej) => {\r\n        setTimeout(() => {\r\n            res(true);\r\n        }, milliseconds);\r\n        \r\n    })\r\n} ","\r\nexport const validMoney = (value = '') => {\r\n    value = value.replace(/\\$|,/g, \"\")\r\n    if (value === '') return value;\r\n    const match = value.match(/(^[1-9]\\d{0,10}$)|(^[1-9]\\d{0,10}\\.$)|(^[1-9]\\d{0,10}\\.\\d{1,2}$)/g) //accept: \"450\" | \"450.\" | \"450.85\"\r\n    if (match) {\r\n        return formatMoneyAux(match[0])\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nexport const validInt = (value = '', maxLength = 2) => {\r\n    if (value === '') return value;\r\n    const match = value.match(/(^[1-9]\\d{0,1}$)|(^[1-9]\\d{0,1}\\.\\d{0,2}$)/g)\r\n    if (match) return match[0]\r\n\r\n    return false\r\n}\r\n\r\nexport const validAge = (value = '', MAX_AGE) => {\r\n    if (value === '') return value;\r\n    const match = value.match(/^[1-9]\\d{0,2}$/g)\r\n    if(match) {\r\n        if(Number(value) >= 0 && Number(value) <= MAX_AGE){\r\n            return match[0]   \r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nexport const validTagInput = (value = [], item, maxItems = 6) => {\r\n    if(!validRepetition(value, item)){ return }\r\n    if(value.length > maxItems){\r\n        value.pop()\r\n        return\r\n    }\r\n    const validation = item.value.match(/(^[1-9]\\d{0,10}$)|(^[1-9]\\d{0,10}\\.\\d{1,2}$)/g)\r\n    if (!validation || validation === '') {\r\n        value.pop()\r\n    }\r\n    else {\r\n        value.pop()\r\n        value.push(formatMoney(item.value))\r\n    }\r\n    return\r\n}\r\n\r\nconst formatMoney = (value) => {\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        // These options are needed to round to whole numbers if that's what you want.\r\n        //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\r\n        //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\r\n    });\r\n\r\n    return formatter.format(value)\r\n}\r\n\r\nconst formatMoneyAux = (value) => {\r\n    let result = \"\"\r\n    const splited = value.split(\".\")\r\n    const integerPart = Number(splited[0]).toLocaleString(\"en-US\");\r\n    const decimalPart = splited[1] != null ? '.' + splited[1] : null\r\n    \r\n    result += (decimalPart) ? integerPart + decimalPart : integerPart;\r\n    return result\r\n}\r\n\r\nconst validRepetition = (value, item) => {\r\n    value.pop()\r\n    if(!value.includes(formatMoney(item.value))){ \r\n        value.push(item.value)\r\n        return true\r\n    }\r\n    return false;\r\n}\r\n","import React from 'react';\r\nimport { Form, InputGroup, TagInput } from 'rsuite';\r\n\r\n\r\n\r\nconst TextField = ({ name, label, accepter, helpBlock, prefix, posfix, ...rest }) => {\r\n    return (\r\n        <Form.Group>\r\n            {prefix ? (\r\n                <>\r\n                    <Form.ControlLabel>{label}</Form.ControlLabel>\r\n                    <InputGroup>\r\n                        <InputGroup.Addon>{prefix}</InputGroup.Addon>\r\n                        <Form.Control name={name} accepter={accepter} {...rest} />\r\n                        <Form.HelpText>{helpBlock}</Form.HelpText>\r\n                    </InputGroup>\r\n                </>\r\n            ) : (<>\r\n                {\r\n                    posfix ? (\r\n                        <>\r\n                            <Form.ControlLabel>{label}</Form.ControlLabel>\r\n                            <InputGroup>\r\n                                <Form.Control name={name} accepter={accepter} {...rest} />\r\n                                <InputGroup.Addon>{posfix}</InputGroup.Addon>\r\n                                <Form.HelpText>{helpBlock}</Form.HelpText>\r\n                            </InputGroup>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Form.ControlLabel>{label}</Form.ControlLabel>\r\n                            <Form.Control name={name} accepter={accepter} {...rest} />\r\n                            <Form.HelpText>{helpBlock}</Form.HelpText>\r\n                        </>\r\n                    )\r\n                }\r\n            </>\r\n            )}\r\n\r\n        </Form.Group >\r\n    )\r\n}\r\n\r\nconst TagTextField = ({ name, label, accepter, helpBlock, prefix, posfix, ...rest }) => {\r\n    return (\r\n        <Form.Group>\r\n            <Form.ControlLabel>{label}</Form.ControlLabel>\r\n            <TagInput\r\n                className='w-100'\r\n                name={name} {...rest}\r\n            />\r\n            {/* <Form.HelpText>{helpBlock}</Form.HelpText> */}\r\n        </Form.Group >\r\n    )\r\n}\r\n\r\nexport {\r\n    TextField,\r\n    TagTextField\r\n};","import React from 'react';\r\nimport { validMoney } from '../../../helpers/calculatorValidator';\r\nimport { TextField } from '../../textfieldsForm/TexField';\r\n\r\n// #region component\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\n\r\nconst InputSalary = ({ formValue, handleInputChange, label, placeholder }) => {\r\n\r\n    const { salary } = formValue;\r\n\r\n    const salaryHandler = (value) => {\r\n        const result = validMoney(value)\r\n        if (result !== false) { handleInputChange({ name: 'salary', value: result }) }\r\n    }\r\n\r\n    return (\r\n        <TextField\r\n            prefix=\"$\"\r\n            name=\"salary\"\r\n            id=\"id_salary_input\"\r\n            label={label}\r\n            placeholder={placeholder}\r\n            value={salary}\r\n            onChange={salaryHandler}\r\n        />\r\n    );\r\n}\r\n\r\nInputSalary.propTypes = propTypes;\r\nInputSalary.defaultProps = defaultProps;\r\n\r\nexport {\r\n    InputSalary\r\n};","import React from 'react';\r\nimport { validInt } from '../../../helpers/calculatorValidator';\r\nimport { TextField } from '../../textfieldsForm/TexField';\r\n\r\n// #region component\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\n\r\nconst InputRate = ({ formValue, handleInputChange, label, placeholder }) => {\r\n\r\n    const { rate } = formValue;\r\n\r\n    const rateHandler = (value) => {\r\n        if (validInt(value) !== false) { handleInputChange({ name: 'rate', value }) }\r\n    }\r\n\r\n    return (\r\n        <TextField\r\n            posfix=\"%\"\r\n            name=\"rate\"\r\n            id=\"id_rate_input\"\r\n            label={label}\r\n            placeholder={placeholder}\r\n            value={rate}\r\n            onChange={rateHandler} />\r\n    );\r\n}\r\n\r\nInputRate.propTypes = propTypes;\r\nInputRate.defaultProps = defaultProps;\r\n\r\nexport {\r\n    InputRate\r\n};","import React from 'react';\r\nimport { Slider } from 'rsuite';\r\n\r\n// #region component\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\n\r\nconst InputRateSlider = ({ formValue, handleInputChange }) => {\r\n\r\n    const { rate } = formValue;\r\n\r\n    return (\r\n        <Slider\r\n            max={100}\r\n            step={0.2}\r\n            progress\r\n            // style={{  fontSize: '10px' }}\r\n            value={Number(rate)}\r\n            // graduated\r\n            // renderMark={mark => {\r\n            //     if(mark == 100) return mark+' %'\r\n            //     return mark % 10 == 0 ? mark : false;\r\n            // }}\r\n            onChange={value => {\r\n                handleInputChange({ name: 'rate', value: value + '' });\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nInputRateSlider.propTypes = propTypes;\r\nInputRateSlider.defaultProps = defaultProps;\r\n\r\nexport {\r\n    InputRateSlider\r\n};","import React from 'react';\r\nimport { validTagInput } from '../../../helpers/calculatorValidator';\r\nimport { TagTextField } from '../../textfieldsForm/TexField';\r\n\r\n// #region component\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\n\r\nconst InputMonthPay = ({ formValue, handleInputChange, label, placeholder }) => {\r\n\r\n    const { month_pay } = formValue;\r\n\r\n    const monthPayHandler = (value, item) => {\r\n        validTagInput(value, item)\r\n        handleInputChange({ name: 'month_pay', value })\r\n    }\r\n    const monthPayClenHandler = (event) => {\r\n        handleInputChange({ name: 'month_pay', value: [] })\r\n    }\r\n    const monthPayCloseHandler = (value, item) => {\r\n        if (item.type === 'click') {\r\n            handleInputChange({ name: 'month_pay', value })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TagTextField\r\n            name=\"month_pay\"\r\n            id=\"id_month_pay_input\"\r\n            label={label}\r\n            trigger={['Enter', 'Space', 'Comma']}\r\n            placeholder={placeholder}\r\n            value={month_pay}\r\n            onCreate={monthPayHandler}\r\n            onClean={monthPayClenHandler}\r\n            onChange={monthPayCloseHandler}\r\n        />\r\n    );\r\n}\r\n\r\nInputMonthPay.propTypes = propTypes;\r\nInputMonthPay.defaultProps = defaultProps;\r\n\r\nexport {\r\n    InputMonthPay\r\n};","\r\n\r\nexport const calculeRetPlan = ({ salary = \"$30,000.00\", rate = \"10.0\", month_pay = [\"$5,000\", \"$10,000.00\", \"20,000.00\"], age = 26 }, MAX_AGE) => {\r\n    const salaryGoal = Number(salary.replace(/\\$|,/g, \"\"))\r\n    const rateNumber = Number(rate)\r\n    const ageNumber = Number(age)\r\n\r\n    const response = month_pay.map((item, ind) => {\r\n        let currentYear = new Date().getFullYear()\r\n        let iteration = 1\r\n        let currentSalaryAdvance = 0.0\r\n        const annualSaving = Number(item.replace(/\\$|,/g, \"\")) * 12.0;\r\n        const annualSavingString = formatMoney(annualSaving);\r\n        const result = {\r\n            id: (ind + 1),\r\n            salary,\r\n            annualSaving: annualSavingString,\r\n            rate: rate + \"%\",\r\n            month_pay: item,\r\n            success: false,\r\n            advice: \"\",\r\n            breakDown: [\r\n                {\r\n                    id: iteration,\r\n                    key: `t-${ind}-r-${iteration-1}`,\r\n                    year: currentYear + \"\",\r\n                    return: \"$0.00\",\r\n                    investment_and_returns: annualSavingString,\r\n                    final_salary: \"$0.00\",\r\n                    current_age: ageNumber + ' años',\r\n                }\r\n            ]\r\n        }\r\n\r\n        while (((ageNumber + iteration) < MAX_AGE) && (currentSalaryAdvance < salaryGoal)) {\r\n            const auxPrevInvestment = Number(result.breakDown[iteration - 1].investment_and_returns.replace(/\\$|,/g, \"\"))\r\n            const newReturn = auxPrevInvestment * (rateNumber / 100)\r\n            const newAccumulation = newReturn + auxPrevInvestment + annualSaving\r\n            currentSalaryAdvance = newReturn / 12\r\n            result.breakDown.push({\r\n                id: (iteration + 1),\r\n                key: `t-${ind}-r-${iteration}`,\r\n                year: ++currentYear + \"\",\r\n                return: formatMoney(newReturn),\r\n                investment_and_returns: formatMoney(newAccumulation),\r\n                final_salary: formatMoney(currentSalaryAdvance),\r\n                current_age: (ageNumber + iteration) + ' años'\r\n            })\r\n            iteration++\r\n        }\r\n\r\n        if (currentSalaryAdvance < salaryGoal) {\r\n            result.advice = `Tu meta no podrá cumplirse antes de que cumplas máximo ${MAX_AGE} años debido a que los parámetros insertados pueden ser poco realistas. Intenta de nuevo, con un menor salario objetivo, aumentando la tasa de rendimiento o aumentando los abonos mensuales`\r\n        }\r\n        else {\r\n            result.success = true\r\n        }\r\n\r\n        return result;\r\n\r\n    })\r\n\r\n    return response.sort((a,b) => b.breakDown.length - a.breakDown.length);\r\n\r\n}\r\n\r\nconst formatMoney = (value) => {\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        // These options are needed to round to whole numbers if that's what you want.\r\n        //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\r\n        //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\r\n    });\r\n\r\n    return formatter.format(value)\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GeneralContext } from '../../../GeneralContext';\r\nimport { validAge } from '../../../helpers/calculatorValidator';\r\nimport { TextField } from '../../textfieldsForm/TexField';\r\n\r\n// #region component\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\n\r\nconst InputAge = ({ formValue, handleInputChange, label, placeholder }) => {\r\n    const { reducerData } = useContext(GeneralContext)\r\n    const { MAX_AGE } = reducerData\r\n    const { age } = formValue;\r\n\r\n    const ageHandler = (value) => {\r\n        if (validAge(value,MAX_AGE) !== false) { handleInputChange({ name: 'age', value }) }\r\n    }\r\n\r\n    return (\r\n        <TextField\r\n            posfix=\"años\"\r\n            name=\"age\"\r\n            id=\"id_age_input\"\r\n            label={label}\r\n            placeholder={placeholder}\r\n            value={age}\r\n            onChange={ageHandler} />\r\n    );\r\n}\r\n\r\nInputAge.propTypes = propTypes;\r\nInputAge.defaultProps = defaultProps;\r\n\r\nexport {\r\n    InputAge\r\n};","import React, { useContext } from 'react';\r\n// import JSONView from '../../ui/JSONView';\r\nimport { Button, ButtonToolbar, Col, FlexboxGrid, Form, Loader, Message } from 'rsuite';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { GeneralContext } from '../../../GeneralContext';\r\n\r\n\r\n// import styles\r\nimport styles from \"./FormCalculatorPrincipal.module.css\";\r\nimport { BiExit, BiSend } from 'react-icons/bi';\r\n// logo\r\nimport logo from \"../../../media/retplan-logo.png\";\r\n\r\n// hooks / models / helpers / my components\r\nimport model from '../../../models/calculator/formModel';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { types } from '../../../types/types';\r\nimport { startUser } from '../../../selectors/startUser';\r\nimport { InputSalary } from '../input-types/InputSalary';\r\nimport { InputRate } from '../input-types/InputRate';\r\nimport { InputRateSlider } from '../input-types/InputRateSlider';\r\nimport { InputMonthPay } from '../input-types/InputMonthPay';\r\nimport { calculeRetPlan } from '../../../helpers/calculator-functions';\r\nimport { InputAge } from '../input-types/InputAge';\r\n\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\n\r\nconst FormCalculatorPrincipal = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const { formValue, handleInputChange, setFormError, setLoading, resetForm } = useForm({\r\n        salary: \"15,000\",\r\n        rate: \"10.1\",\r\n        month_pay: [],\r\n        age: \"26\"\r\n    });\r\n    const { status: status_error, error_msg } = formValue.error;\r\n    const { loading, salary, rate, month_pay, age } = formValue;\r\n\r\n    const { reducerData , dispatch } = useContext(GeneralContext);\r\n    const { MAX_AGE } = reducerData\r\n\r\n    const handlePrincipalCalculator = (formStatus) => {\r\n        console.log(\"formStatus --> \", formStatus)\r\n        if (formStatus) {\r\n            setLoading(true); //load while authenticate\r\n\r\n            // NOTA:    tener cuidado con funciones async \r\n            //          ya que no funciona bien por el cambio \r\n            //          de state en PublicRoute\r\n            startUser(500)\r\n                .then(userData => {\r\n                    if (month_pay.length < 1) { // check month pay length\r\n                        setFormError(true, 'Al menos debes agregar 1 abono mensual');\r\n                        return\r\n                    }\r\n                    if (rate < 1) { // check month pay length\r\n                        setFormError(true, 'Ingresa una tasa de rendimiento válida mayor igual a 1');\r\n                        return\r\n                    }\r\n                    const planData = calculeRetPlan(formValue, MAX_AGE)\r\n                    console.log(\"Sucess!!!\");\r\n                    resetForm();\r\n                    dispatch({ type: types.start, payload:{ user: {status: userData}, planData } });\r\n                    navigate('/secondary-calculator');\r\n                });\r\n\r\n\r\n        }\r\n    }\r\n\r\n    const handleEnd = () => {\r\n        startUser(400)\r\n            .then(response => {\r\n                console.log(\"LogOut!!!!\");\r\n                dispatch({\r\n                    type: types.end\r\n                });\r\n                navigate('/start')\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={`container animate__animated animate__bounceInRight allHeightWidth v-a-middle ${styles.fondo}`}>\r\n            {/* <JSONView formValue={formValue} /> */}\r\n            <FlexboxGrid justify=\"center\" >\r\n                <FlexboxGrid.Item as={Col} xs={20} md={14}>\r\n                    <FlexboxGrid justify=\"center\" className={`${styles.formStyle}`}>\r\n                        <FlexboxGrid.Item as={Col} xs={10} xsOffset={14} md={8} mdOffset={16} lg={6} lgOffset={18} className={`mt-4 ta-center`}>\r\n                            <Button\r\n                                color=\"red\"\r\n                                appearance=\"ghost\"\r\n                                endIcon={<BiExit />}\r\n                                onClick={handleEnd}\r\n                            >\r\n                                Salir\r\n                            </Button>\r\n                        </FlexboxGrid.Item>\r\n                        {/* logo */}\r\n                        <FlexboxGrid.Item as={Col} xs={20}>\r\n                            <img src={logo} className={styles.imgStyle} alt=\"logo\" />\r\n                        </FlexboxGrid.Item>\r\n                        {/* título */}\r\n                        <FlexboxGrid.Item as={Col} xs={20} className=\"mt-3\">\r\n                            <h4 id=\"id_bienvenida\" className={styles.textCenter}>Comienza a ver el poder que tienen las inversiones sobre tu ahorro</h4>\r\n                        </FlexboxGrid.Item>\r\n                        {/* form */}\r\n                        <FlexboxGrid.Item as={Col} xs={20} className=\"mt-5\">\r\n                            <Form\r\n                                // ref={formRef}\r\n                                formValue={{ salary, rate, age }}\r\n                                onSubmit={handlePrincipalCalculator}\r\n                                fluid\r\n                                model={model}\r\n                            >\r\n                                <FlexboxGrid className={`mb-3 ${styles.vAEnd}`}>\r\n                                    {/* salary */}\r\n                                    <FlexboxGrid.Item as={Col} xs={24} lg={14}>\r\n                                        <InputSalary\r\n                                            formValue={formValue}\r\n                                            handleInputChange={handleInputChange}\r\n                                            label=\"¿Cuánto te gustaría recibir mensualmente?\"\r\n                                            placeholder=\"Ej: 4500\"\r\n                                        />\r\n                                    </FlexboxGrid.Item>\r\n                                    {/* rate */}\r\n                                    <FlexboxGrid.Item as={Col} xs={24} lg={10}>\r\n                                        <InputRate\r\n                                            formValue={formValue}\r\n                                            handleInputChange={handleInputChange}\r\n                                            label=\"Tasa de rendimiento\"\r\n                                            placeholder=\"Ej: 10.5\"\r\n                                        />\r\n                                    </FlexboxGrid.Item>\r\n                                    {/* rate slider */}\r\n                                    <FlexboxGrid.Item as={Col} xs={24} lg={24} className='mt-4' >\r\n                                        <InputRateSlider\r\n                                            formValue={formValue}\r\n                                            handleInputChange={handleInputChange}\r\n                                        />\r\n                                    </FlexboxGrid.Item>\r\n                                    {/* month pay array */}\r\n                                    <FlexboxGrid.Item as={Col} xs={24} lg={18} className='mt-4'>\r\n                                        <InputMonthPay\r\n                                            formValue={formValue}\r\n                                            handleInputChange={handleInputChange}\r\n                                            label=\"¿Cuánto abonarías mensualmente? (max 6)\"\r\n                                            placeholder=\"Ej: 1000\"\r\n                                        />\r\n                                    </FlexboxGrid.Item>\r\n                                    {/* age */}\r\n                                    <FlexboxGrid.Item as={Col} xs={24} lg={6} className='mt-4'>\r\n                                        <InputAge\r\n                                            formValue={formValue}\r\n                                            handleInputChange={handleInputChange}\r\n                                            label=\"Tu edad\"\r\n                                            placeholder=\"Ej: 20\"\r\n                                        />\r\n                                    </FlexboxGrid.Item>\r\n                                    {/* send or loaiding */}\r\n                                    <FlexboxGrid.Item as={Col} xs={24} lg={24} className='mt-4'>\r\n                                        {   //se muestra loading o button si esta cargando\r\n                                            loading\r\n                                                ? (\r\n                                                    <div className={styles.centerContet}>\r\n                                                        <Loader size=\"md\" />\r\n                                                    </div>\r\n                                                )\r\n                                                : (\r\n                                                    <ButtonToolbar >\r\n                                                        <Button appearance=\"primary\" type=\"submit\" block className={styles.centerButton}>\r\n                                                            Calcular plan\r\n                                                            <BiSend style={{ marginLeft: '10px' }} />\r\n                                                        </Button>\r\n                                                    </ButtonToolbar>\r\n                                                )\r\n                                        }\r\n                                    </FlexboxGrid.Item>\r\n                                    {/* divider error message */}\r\n                                    <FlexboxGrid.Item as={Col} xs={20} lg={24} className=\"mt-4\" >\r\n                                        {\r\n                                            status_error &&\r\n                                            <Message showIcon type=\"error\">\r\n                                                {error_msg}\r\n                                            </Message>\r\n                                        }\r\n\r\n                                    </FlexboxGrid.Item>\r\n                                </FlexboxGrid>\r\n\r\n                            </Form>\r\n                        </FlexboxGrid.Item>\r\n                    </FlexboxGrid>\r\n                </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nFormCalculatorPrincipal.propTypes = propTypes;\r\nFormCalculatorPrincipal.defaultProps = defaultProps;\r\n\r\nexport default FormCalculatorPrincipal;","import React from 'react';\r\n\r\nimport FormCalculatorPrincipal from './forms/FormCalculatorPrincipal';\r\nimport styles from './PrincipalCalculator.module.css'\r\n\r\nconst PrincipalCalculator = () => {\r\n\r\n    return (\r\n        <div className={styles.fondo}>\r\n            <FormCalculatorPrincipal />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PrincipalCalculator;","import React, { useContext } from 'react';\r\nimport { Line, LineChart } from '@rsuite/charts';\r\nimport { GeneralContext } from '../../GeneralContext';\r\n\r\n\r\nconst MyLineChart = () => {\r\n    const { planData: data } = useContext(GeneralContext).reducerData;\r\n\r\n    const getChartData = () => {\r\n        const result = []\r\n        const sortedData = data.sort((a, b) => b.breakDown.length - a.breakDown.length);\r\n        const dataLength = data.length;\r\n        for (let ind = 0; ind < sortedData[0].breakDown.length; ind++) {\r\n            const dataLines = [sortedData[0].breakDown[ind].year]\r\n            for (let j = 0; j < dataLength; j++) {\r\n                const element = sortedData[j].breakDown[ind];\r\n                if (element) {\r\n                    dataLines.push(Number(clean(element.final_salary)))\r\n                }\r\n                else {\r\n                    dataLines.push(null)\r\n                }\r\n            }\r\n            \r\n            result.push(dataLines)\r\n        }\r\n        return result\r\n\r\n    }\r\n    const clean = (text) => (text.replace(/\\$|,/g, \"\"))\r\n    return (\r\n        <LineChart data={getChartData()}>\r\n            {\r\n                data.map((item, ind) => (\r\n                    <Line key={ind} name={`Abono: ${item.month_pay}`} area />\r\n                ))\r\n            }\r\n        </LineChart>\r\n    );\r\n}\r\n\r\nexport default MyLineChart;","import React, { useContext, useState } from 'react';\r\nimport { BiBarChartAlt } from 'react-icons/bi';\r\nimport { Button, Divider, Modal } from 'rsuite';\r\nimport { GeneralContext } from '../../GeneralContext';\r\nimport MyLineChart from './MyLineChart';\r\n\r\n\r\nconst ModalChart = () => {\r\n    const { planData: data } = useContext(GeneralContext).reducerData;\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const handleOpen = () => {\r\n        setOpenModal(true);\r\n    };\r\n    const handleClose = () => setOpenModal(false);\r\n    return (<>\r\n        <Button\r\n            block\r\n            color=\"violet\"\r\n            appearance=\"primary\"\r\n            endIcon={<BiBarChartAlt />}\r\n            onClick={handleOpen}\r\n        >\r\n            Gráfica\r\n        </Button>\r\n        <Modal size={`md`} open={openModal} onClose={handleClose}>\r\n            <Modal.Header>\r\n                <Modal.Title>Gráfica Comparativa</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p>{`Meta mensual: $${data[0].salary}`}</p>\r\n                <p>{`Mejor abono: ${data[data.length - 1].month_pay}`}</p>\r\n                <p>{`En el mejor caso lograrás tu meta cuando tengas: ${data[data.length - 1].breakDown[data[data.length - 1].breakDown.length - 1].current_age}`}</p>\r\n                <Divider />\r\n                <MyLineChart />\r\n            </Modal.Body>\r\n        </Modal>\r\n    </>\r\n    );\r\n}\r\n\r\n\r\nexport default ModalChart;","import React, { useContext } from 'react';\r\n// import JSONView from '../../ui/JSONView';\r\nimport { Button, ButtonToolbar, Col, FlexboxGrid, Form, Loader, Message } from 'rsuite';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { GeneralContext } from '../../../GeneralContext';\r\n\r\n\r\n// import styles\r\nimport styles from \"./FormCalculatorSecondary.module.css\";\r\nimport { BiExit, BiCalculator } from 'react-icons/bi';\r\n// logo\r\n\r\n// hooks / models / helpers / my components\r\nimport model from '../../../models/calculator/formModel';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { types } from '../../../types/types';\r\nimport { startUser } from '../../../selectors/startUser';\r\nimport { InputSalary } from '../input-types/InputSalary';\r\nimport { InputRate } from '../input-types/InputRate';\r\nimport { InputMonthPay } from '../input-types/InputMonthPay';\r\nimport FlexboxGridItem from 'rsuite/esm/FlexboxGrid/FlexboxGridItem';\r\nimport { InputAge } from '../input-types/InputAge';\r\nimport { calculeRetPlan } from '../../../helpers/calculator-functions';\r\nimport ModalChart from '../../ui/ModalChart';\r\n\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\n\r\nconst FormCalculatorSecondary = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const { formValue, handleInputChange, setFormError, setLoading, resetForm } = useForm({\r\n        salary: \"\",\r\n        rate: \"\",\r\n        month_pay: [],\r\n        age: \"\",\r\n    });\r\n    const { status: status_error, error_msg } = formValue.error;\r\n    const { loading, salary, rate, month_pay, age } = formValue;\r\n\r\n    const { reducerData, dispatch } = useContext(GeneralContext);\r\n    const { MAX_AGE } = reducerData\r\n\r\n    const handleSecondaryCalculator = (formStatus) => {\r\n        console.log(\"formStatus --> \", formStatus)\r\n        if (formStatus) {\r\n            setLoading(true); //load while authenticate\r\n\r\n            startUser(500)\r\n                .then(userData => {\r\n                    if (month_pay.length < 1) { // check month pay length\r\n                        setFormError(true, 'Al menos debes agregar 1 abono mensual');\r\n                        return\r\n                    }\r\n                    if (rate < 1) { // check month pay length\r\n                        setFormError(true, 'Ingresa una tasa de rendimiento válida mayor igual a 1');\r\n                        return\r\n                    }\r\n                    const planData = calculeRetPlan(formValue, MAX_AGE)\r\n                    console.log(\"Sucess!!!\");\r\n                    resetForm();\r\n                    dispatch({ type: types.start, payload: { user: { status: userData }, planData } });\r\n                    navigate('/secondary-calculator');\r\n                });\r\n\r\n\r\n        }\r\n    }\r\n\r\n    const handleEnd = () => {\r\n        startUser(400)\r\n            .then(response => {\r\n                console.log(\"LogOut!!!!\");\r\n                dispatch({\r\n                    type: types.end\r\n                });\r\n                navigate('/start')\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`container animate__animated animate__bounceInLeft`}>\r\n                <FlexboxGrid justify=\"end\" >\r\n                    {/* exit button */}\r\n                    <FlexboxGrid.Item as={Col} className={`mt-3 ta-center`} >\r\n                        <Button\r\n                            size=\"lg\"\r\n                            color=\"red\"\r\n                            appearance=\"primary\"\r\n                            endIcon={<BiExit />}\r\n                            onClick={handleEnd}\r\n                        >\r\n                            Salir\r\n                        </Button>\r\n                    </FlexboxGrid.Item>\r\n                </FlexboxGrid>\r\n            </div>\r\n            <div className={`container animate__animated animate__bounceInRight`}>\r\n                <FlexboxGrid justify=\"center\" >\r\n\r\n                    <FlexboxGrid.Item as={Col} xs={24} >\r\n                        <FlexboxGrid align=\"middle\" justify=\"center\" className={`mt-5 ${styles.formStyle}`}>\r\n                            <FlexboxGridItem as={Col} xs={24} className=\"ta-center mt-3\">\r\n                                <h5>Completa la información requerida y comprueba el poder de las inversiones a largo plazo</h5>\r\n                            </FlexboxGridItem>\r\n                            {/* form */}\r\n                            <FlexboxGridItem as={Col} xs={24}>\r\n                                <Form\r\n                                    // ref={formRef}\r\n                                    formValue={{ salary, rate, age }}\r\n                                    onSubmit={handleSecondaryCalculator}\r\n                                    fluid\r\n                                    model={model}\r\n                                >\r\n                                    <FlexboxGrid justify=\"center\" className={`mt-4 mb-3 ${styles.vAEnd}`}>\r\n                                        {/* salary */}\r\n                                        <FlexboxGrid.Item as={Col} xs={20} lg={4}>\r\n                                            <InputSalary\r\n                                                formValue={formValue}\r\n                                                handleInputChange={handleInputChange}\r\n                                                label=\"Sueldo mensual deseado\"\r\n                                                placeholder=\"Ej: 4500\"\r\n                                            />\r\n                                        </FlexboxGrid.Item>\r\n                                        {/* rate */}\r\n                                        <FlexboxGrid.Item as={Col} xs={20} lg={3}>\r\n                                            <InputRate\r\n                                                formValue={formValue}\r\n                                                handleInputChange={handleInputChange}\r\n                                                label=\"Tasa\"\r\n                                                placeholder=\"Ej: 10.5\"\r\n                                            />\r\n                                        </FlexboxGrid.Item>\r\n\r\n                                        {/* month pay array */}\r\n                                        <FlexboxGrid.Item as={Col} xs={20} lg={8} >\r\n                                            <InputMonthPay\r\n                                                formValue={formValue}\r\n                                                handleInputChange={handleInputChange}\r\n                                                label=\"Abono(s) mensual (max 6)\"\r\n                                                placeholder=\"Ej: 1000\"\r\n                                            />\r\n                                        </FlexboxGrid.Item>\r\n                                        {/* age */}\r\n                                        <FlexboxGrid.Item as={Col} xs={20} lg={3}>\r\n                                            <InputAge\r\n                                                formValue={formValue}\r\n                                                handleInputChange={handleInputChange}\r\n                                                label=\"Edad\"\r\n                                                placeholder=\"Ej: 20\"\r\n                                            />\r\n                                        </FlexboxGrid.Item>\r\n                                        {/* send or loaiding */}\r\n                                        <FlexboxGrid.Item as={Col} xs={20} lg={3} >\r\n                                            {   //se muestra loading o button si esta cargando\r\n                                                loading\r\n                                                    ? (\r\n                                                        <div className={styles.centerContet}>\r\n                                                            <Loader size=\"md\" />\r\n                                                        </div>\r\n                                                    )\r\n                                                    : (\r\n                                                        <ButtonToolbar >\r\n                                                            <Button appearance=\"primary\" type=\"submit\" block className={styles.centerButton}>\r\n                                                                Calcular\r\n                                                                <BiCalculator style={{ marginLeft: '10px' }} />\r\n                                                            </Button>\r\n                                                        </ButtonToolbar>\r\n                                                    )\r\n                                            }\r\n                                        </FlexboxGrid.Item>\r\n                                        {/* chart button with modal*/}\r\n                                        <FlexboxGrid.Item as={Col} xs={20} lg={2} >\r\n                                            <ModalChart />\r\n                                        </FlexboxGrid.Item>\r\n\r\n\r\n\r\n                                        {/* divider error message */}\r\n                                        <FlexboxGrid.Item as={Col} xs={20} lg={24} className=\"mt-4\" >\r\n                                            {\r\n                                                status_error &&\r\n                                                <Message showIcon type=\"error\">\r\n                                                    {error_msg}\r\n                                                </Message>\r\n                                            }\r\n\r\n                                        </FlexboxGrid.Item>\r\n                                    </FlexboxGrid>\r\n\r\n                                </Form>\r\n                            </FlexboxGridItem>\r\n\r\n                        </FlexboxGrid>\r\n                    </FlexboxGrid.Item>\r\n                </FlexboxGrid>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nFormCalculatorSecondary.propTypes = propTypes;\r\nFormCalculatorSecondary.defaultProps = defaultProps;\r\n\r\nexport default FormCalculatorSecondary;","import React from 'react';\r\nimport { Notification } from 'rsuite';\r\n\r\nconst Message = ({ type, header, message, ...rest }) => {\r\n    return (\r\n        <Notification  {...rest} type={type} header={header}>\r\n            {message}\r\n        </Notification>\r\n    );\r\n}\r\n\r\nexport default Message;","import React, { useContext } from 'react';\r\nimport { Col, FlexboxGrid, Panel, Table } from 'rsuite';\r\nimport { GeneralContext } from '../../GeneralContext';\r\nimport Message from '../ui/Message';\r\n// import { calculeRetPlan } from '../../helpers/calculator-functions';\r\n\r\nimport styles from './ResultPanel.module.css'\r\n\r\nconst { Column, HeaderCell, Cell } = Table;\r\n\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\nconst ResultPanel = () => {\r\n    const { planData: data } = useContext(GeneralContext).reducerData;\r\n\r\n    const [sortColumn, setSortColumn] = React.useState();\r\n    const [sortType, setSortType] = React.useState();\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const getData = (ind) => {\r\n        if (sortColumn && sortType) {\r\n            return data[ind].breakDown.sort((a, b) => {\r\n                let x = a[sortColumn];\r\n                let y = b[sortColumn];\r\n                if (typeof x === 'string') {\r\n                    x = x.charCodeAt();\r\n                }\r\n                if (typeof y === 'string') {\r\n                    y = y.charCodeAt();\r\n                }\r\n                if (sortType === 'asc') {\r\n                    return x - y;\r\n                } else {\r\n                    return y - x;\r\n                }\r\n            });\r\n        }\r\n        return data[ind].breakDown;\r\n    };\r\n\r\n    const handleSortColumn = (sortColumn, sortType) => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            setSortColumn(sortColumn);\r\n            setSortType(sortType);\r\n        }, 500);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={`container animate__animated animate__bounceInLeft mb-5`}>\r\n\r\n            <FlexboxGrid justify=\"center\" >\r\n                <FlexboxGrid.Item as={Col} xs={24} lg={24} className={`mt-3`} key={0}>\r\n                    <Message\r\n                        className=\"w-100\"\r\n                        type=\"info\"\r\n                        header=\"Tu plan de retiro es el siguiente:\"\r\n                        message={(\r\n                            <>\r\n                                <h5>{`Deseas un salario de: $${data[0].salary}`}</h5>\r\n                                <h5>{`Invirtiendo tus ahorros a una tasa del: $${data[0].rate}`}</h5>\r\n                            </>\r\n                        )}\r\n                    />\r\n                </FlexboxGrid.Item>\r\n                {\r\n                    data.map((item, index) => (\r\n                        <FlexboxGrid.Item as={Col} xs={24} lg={24} className={`mt-3`} key={index}>\r\n                            <Panel className={` ${styles.panelStyle}`} header={`Plan # ${(index + 1)}`} bordered >\r\n                                <h6 className='mb-4'>{`Meta slarial mensual: $${item.salary} | Tasa de rendimento: ${item.rate} | Abono mensual: ${item.month_pay}`}</h6>\r\n                                <h6 className='mb-4'>{`Tu ahorro anual es: ${item.annualSaving}`}</h6>\r\n                                {\r\n                                    !item.success ?\r\n                                        (<h6 className='mb-4'>{`Tu meta NO podrá cumplirse incluso después de los: ${item.breakDown[item.breakDown.length - 1].current_age}`}</h6>)\r\n                                        :\r\n                                        (<h6 className='mb-4'>{`Tu meta se cumplirá cuando tengas: ${item.breakDown[item.breakDown.length - 1].current_age}`}</h6>)\r\n                                }\r\n                                {\r\n                                    !item.success ?\r\n                                        (<Message className=\"w-100\" type=\"warning\" header=\"Advertencia:\" message={(<h5>{item.advice}</h5>)} />)\r\n                                        :\r\n                                        (<Table\r\n                                            height={800}\r\n                                            data={getData(index)}\r\n                                            sortColumn={sortColumn}\r\n                                            sortType={sortType}\r\n                                            onSortColumn={handleSortColumn}\r\n                                            loading={loading}\r\n                                            rowKey=\"key\"\r\n                                        >\r\n                                            <Column width={80} align=\"center\" sortable resizable>\r\n                                                <HeaderCell>Id</HeaderCell>\r\n                                                <Cell dataKey=\"key\">{rowData => rowData.id}</Cell>\r\n                                            </Column>\r\n\r\n                                            <Column width={100} sortable resizable>\r\n                                                <HeaderCell>Año</HeaderCell>\r\n                                                <Cell dataKey=\"year\" />\r\n                                            </Column>\r\n\r\n                                            <Column width={150} sortable resizable>\r\n                                                <HeaderCell>Rendimiento</HeaderCell>\r\n                                                <Cell dataKey=\"return\" />\r\n                                            </Column>\r\n\r\n                                            <Column width={250} sortable resizable>\r\n                                                <HeaderCell>Acumulación</HeaderCell>\r\n                                                <Cell dataKey=\"investment_and_returns\" />\r\n                                            </Column>\r\n\r\n                                            <Column sortable width={180} >\r\n                                                <HeaderCell>Ganarías mensualmente</HeaderCell>\r\n                                                <Cell dataKey=\"final_salary\" />\r\n                                            </Column>\r\n                                            <Column sortable flexGrow={1} >\r\n                                                <HeaderCell>Edad</HeaderCell>\r\n                                                <Cell dataKey=\"current_age\" />\r\n                                            </Column>\r\n                                        </Table>)\r\n                                }\r\n                            </Panel>\r\n                        </FlexboxGrid.Item>\r\n                    ))\r\n                }\r\n\r\n            </FlexboxGrid>\r\n        </div>\r\n    );\r\n}\r\n\r\nResultPanel.propTypes = propTypes;\r\nResultPanel.defaultProps = defaultProps;\r\n\r\nexport default ResultPanel;","import React from 'react';\r\nimport { Col, FlexboxGrid } from 'rsuite';\r\n// import HeroList from '../hero/HeroList';\r\nimport styles from './SecondaryCalculator.module.css'\r\nimport FormCalculatorSecondary from './forms/FormCalculatorSecondary';\r\nimport ResultPanel from '../tables/ResultPanel';\r\n\r\nconst SecondaryCalculator = () => {\r\n    return (\r\n        <div className={styles.fondo}>\r\n            <FlexboxGrid justify=\"center\" >\r\n                <FlexboxGrid.Item as={Col} xs={24} >\r\n                    <FormCalculatorSecondary />\r\n                </FlexboxGrid.Item>\r\n                <FlexboxGrid.Item as={Col} xs={24} className={`mt-2`} >\r\n                    <ResultPanel />\r\n                </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SecondaryCalculator;","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { Container, Content } from 'rsuite';\r\n// import MiNavBar from './components/ui/MiNavBar';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\n\r\nconst RetirementPlanApp = () => {\r\n    return (\r\n        <Container>\r\n            {/* <Header className=\"\">\r\n                <MiNavBar />\r\n            </Header> */}\r\n            <Content >\r\n                <Outlet />\r\n            </Content>\r\n        </Container>\r\n    );\r\n}\r\n\r\nRetirementPlanApp.propTypes = propTypes;\r\nRetirementPlanApp.defaultProps = defaultProps;\r\n\r\nexport default RetirementPlanApp;","import React, { useContext } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { CustomProvider } from 'rsuite';\r\n// context\r\nimport { GeneralContext } from '../GeneralContext';\r\n// my components\r\nimport PrincipalCalculator from '../components/calculator/PrincipalCalculator';\r\nimport SecondaryCalculator from '../components/calculator/SecondaryCalculator';\r\n\r\n\r\nimport RetirementPlanApp from '../RetirementPlanApp';\r\n\r\nconst DashboardRouter = () => {\r\n    const { theme } = useContext(GeneralContext)\r\n\r\n    return (\r\n        <CustomProvider theme={theme}>\r\n            <Routes>\r\n                <Route path=\"\" element={<RetirementPlanApp />}>\r\n                    <Route index element={<PrincipalCalculator />} />\r\n                    <Route path=\"secondary-calculator\" element={<SecondaryCalculator />} />\r\n                    {/* <Route path=\"marvel\" element={<MarvelScreen />} />\r\n                    <Route path=\"search\" element={<SearchScreen />} />\r\n                    <Route path=\"hero/:id_hero\" element={<HeroScreen />} /> */}\r\n                </Route>\r\n            </Routes>\r\n        </CustomProvider>\r\n    );\r\n}\r\n\r\nexport default DashboardRouter;","// react and rsuite\r\nimport React, { useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Col, CustomProvider, FlexboxGrid, Loader } from 'rsuite';\r\n// hooks\r\nimport { useStart } from '../../hooks/useStart';\r\nimport { startUser } from '../../selectors/startUser';\r\n// extras\r\nimport { GeneralContext } from '../../GeneralContext';\r\nimport { types } from '../../types/types';\r\n// styles\r\nimport styles from './StartScreen.module.css';\r\n\r\n\r\n\r\nconst StartScreen = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const { startValue, setLoading } = useStart({});\r\n    const { loading } = startValue;\r\n\r\n    const { dispatch } = useContext(GeneralContext);\r\n\r\n    const handleStart = (formStatus) => {\r\n        if (formStatus) {\r\n            setLoading(true); //load while authenticate\r\n\r\n            // NOTA:    tener cuidado con funciones async \r\n            //          ya que no funciona bien por el cambio \r\n            //          de state en PublicRoute\r\n            startUser()\r\n                .then(response => {\r\n                    console.log(\"Sucess!!!\");\r\n                    setLoading(false);\r\n                    dispatch({ type: types.start, payload: { user: {status: response}, planData: [] } });\r\n\r\n                    const lastPath = localStorage.getItem('lastPath') || '/';\r\n\r\n                    navigate(lastPath, {\r\n                        replace: true\r\n                    });\r\n                });\r\n        }\r\n    }\r\n    return (\r\n        <CustomProvider theme=\"dark\">\r\n            <FlexboxGrid className={styles.allHeighWidth} justify=\"center\">\r\n\r\n                <FlexboxGrid.Item className=\"h-100\" as={Col} xs={24} >\r\n                    <div className={`h-100 ${styles.carousel1}`}  >\r\n                        <div className=\"v-a-middle allHeightWidth \" justify=\"center\" >\r\n\r\n                            {   //se muestra loading o button si esta cargando\r\n                                loading\r\n                                    ? (\r\n                                        <div className={styles.loadingStyle}>\r\n                                            <Loader size=\"lg\" />\r\n                                        </div>\r\n                                    )\r\n                                    : (\r\n                                        <>\r\n                                            <FlexboxGrid  justify=\"center\">\r\n                                                <FlexboxGrid.Item className=\"h-100\" as={Col} xs={24} >\r\n                                                    <h1 className={` ${styles.textCenter} ${styles.header}`}>Plan de Retiro</h1>\r\n                                                </FlexboxGrid.Item>\r\n                                                <FlexboxGrid.Item className={`mt-5 h-100 ${styles.textCenter}`} as={Col} xs={24} >\r\n\r\n                                                    <Button onClick={handleStart} className={`animate__animated animate__backInDown ${styles.customButton}`} appearance=\"primary\">Iniciar</Button>\r\n                                                </FlexboxGrid.Item>\r\n\r\n                                            </FlexboxGrid>\r\n\r\n\r\n                                        </>\r\n                                    )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n        </CustomProvider>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default StartScreen;","import { useState } from 'react';\r\n\r\n\r\n\r\nexport const useStart = (initialState = {}) => {\r\n\r\n    const [startValue, setStartValue] = useState({\r\n        ...initialState,\r\n        loading: false\r\n    });\r\n\r\n    const setLoading = (loading) => {\r\n        setStartValue({\r\n            ...startValue,\r\n            loading\r\n        })\r\n    }\r\n\r\n    return {\r\n        startValue,\r\n        setStartValue,\r\n        setLoading\r\n    };\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Divider } from 'rsuite';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h3>404 - Page not found</h3>\r\n            <Divider></Divider>\r\n            <Link className=\"rs-nav-item\" to=\"/\">Go Home</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React, { useContext } from 'react';\r\nimport { Navigate , useLocation } from 'react-router-dom';\r\nimport { GeneralContext } from '../GeneralContext';\r\n\r\nexport const PrivateRoute = ({ children }) => {\r\n    const { reducerData } = useContext(GeneralContext);\r\n    const location = useLocation();\r\n\r\n    const { pathname , search } = location;\r\n    if(reducerData.planData.length < 1){\r\n        console.log(\"chii\")\r\n        localStorage.setItem(\"lastPath\",\"/\")\r\n    }\r\n    else{\r\n        console.log(\"nooo\")\r\n        localStorage.setItem('lastPath', `${pathname}${search}`);\r\n    }\r\n\r\n    return (reducerData.user.logged)?children:<Navigate to=\"/start\" />;\r\n}\r\n","import { useContext } from \"react\"\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { GeneralContext } from \"../GeneralContext\"\r\n\r\n\r\nexport const PublicRoute = ({ children }) => {\r\n\r\n    const { reducerData } = useContext(GeneralContext);\r\n    const lastPath = localStorage.getItem('lastPath');\r\n\r\n    return (!reducerData.user.logged)? children : <Navigate to={lastPath} />;\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n\r\n// my components\r\nimport DashboardRouter from './DashboardRouter';\r\nimport StartScreen from '../components/start/StartScreen';\r\nimport NotFound from '../components/404/NotFound';\r\n\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\n\r\n\r\nconst AppRouter = () => {\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <Routes>\r\n                <Route exact\r\n                    path=\"/start\"\r\n                    element={\r\n                        <PublicRoute>\r\n                            <StartScreen />\r\n                        </PublicRoute>\r\n                    } />\r\n                <Route exact\r\n                    path=\"/*\"\r\n                    element={\r\n                        <PrivateRoute>\r\n                            <DashboardRouter />\r\n                        </PrivateRoute>\r\n                    } />\r\n                <Route path=\"*\"\r\n                    element={<NotFound />} />\r\n            </Routes>\r\n        </Router>\r\n\r\n    );\r\n}\r\n\r\nAppRouter.propTypes = propTypes;\r\nAppRouter.defaultProps = defaultProps;\r\n\r\nexport default AppRouter;","import React , { useEffect , useState , useReducer } from 'react';\r\n\r\nimport { authReducer } from './auth/authReducer';\r\nimport { GeneralContext } from './GeneralContext';\r\nimport AppRouter from './routes/AppRouter';\r\n\r\n\r\nconst init = () => {\r\n    return {\r\n        user: JSON.parse(localStorage.getItem('userSession')) || { logged: false },\r\n        planData: (localStorage.getItem('planData')) ? JSON.parse(localStorage.getItem('planData')) : [],\r\n        MAX_AGE: 120\r\n    }\r\n    // return JSON.parse(localStorage.getItem('userSession')) || { logged: false };\r\n}\r\n\r\nconst MainApp = () => {\r\n    const [reducerData, dispatch] = useReducer(authReducer, {}, init);\r\n\r\n    const [active, setActive] = useState('')\r\n    const [theme, setTheme] = useState('dark');\r\n\r\n    useEffect(() => {\r\n        // console.log(\"reducerData-->\",JSON.stringify(reducerData))\r\n        if (!reducerData.user) return;\r\n        localStorage.setItem('userSession', JSON.stringify(reducerData.user));\r\n        localStorage.setItem('planData', JSON.stringify(reducerData.planData));\r\n        \r\n    }, [reducerData])\r\n    return (\r\n        <GeneralContext.Provider value={{\r\n            reducerData, dispatch,\r\n            theme, setTheme,\r\n            active, setActive,\r\n        }}\r\n        >\r\n            <AppRouter />\r\n        </GeneralContext.Provider>\r\n    );\r\n}\r\n\r\nexport default MainApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './customBootstrap.css';\nimport 'rsuite/styles/index.less';\n\nimport MainApp from './MainApp';\n\n\nReactDOM.render(\n    <MainApp />\n    ,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formStyle\":\"FormCalculatorPrincipal_formStyle__3YGiq\",\"imgStyle\":\"FormCalculatorPrincipal_imgStyle__23zPm\",\"textCenter\":\"FormCalculatorPrincipal_textCenter__6xTLy\",\"centerButton\":\"FormCalculatorPrincipal_centerButton__3kQHv\",\"forgotDiv\":\"FormCalculatorPrincipal_forgotDiv__26IJt\",\"googleDiv\":\"FormCalculatorPrincipal_googleDiv__3j4b2\",\"newAccount\":\"FormCalculatorPrincipal_newAccount__8xv9l\",\"vAEnd\":\"FormCalculatorPrincipal_vAEnd__1bnLm\",\"centerContet\":\"FormCalculatorPrincipal_centerContet__15Nuv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allHeighWidth\":\"StartScreen_allHeighWidth__1Dhx0\",\"centerContainer\":\"StartScreen_centerContainer__3Rt14\",\"carousel1\":\"StartScreen_carousel1__erORt\",\"customButton\":\"StartScreen_customButton__2tm44\",\"textCenter\":\"StartScreen_textCenter__xTagx\",\"header\":\"StartScreen_header__GapZQ\"};"],"sourceRoot":""}